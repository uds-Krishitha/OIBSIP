{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":982,"sourceType":"datasetVersion","datasetId":483}],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# E-MAIL SPAM DETECTION WITH MACHINE LEARNING\n* **Email spam is a big problem for many people.**\n* **We want to make a system that can detect spam emails.**\n* **The code will use machine learning to build this system.**\n* **It will work with a dataset of SMS messages that are labeled as spam or not spam.**\n* **The main steps are: getting the data, preparing the data, analyzing the data, training a model, and testing how good the model is.**\n","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","metadata":{"execution":{"iopub.status.busy":"2024-06-17T18:01:36.139858Z","iopub.execute_input":"2024-06-17T18:01:36.141289Z","iopub.status.idle":"2024-06-17T18:01:36.147341Z","shell.execute_reply.started":"2024-06-17T18:01:36.141234Z","shell.execute_reply":"2024-06-17T18:01:36.145838Z"},"trusted":true},"execution_count":49,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/sms-spam-collection-dataset/spam.csv',encoding=\"latin=1\",usecols=[\"v1\",\"v2\"])\ndf","metadata":{"execution":{"iopub.status.busy":"2024-06-17T16:30:11.900473Z","iopub.execute_input":"2024-06-17T16:30:11.900906Z","iopub.status.idle":"2024-06-17T16:30:11.970898Z","shell.execute_reply.started":"2024-06-17T16:30:11.900873Z","shell.execute_reply":"2024-06-17T16:30:11.969618Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"        v1                                                 v2\n0      ham  Go until jurong point, crazy.. Available only ...\n1      ham                      Ok lar... Joking wif u oni...\n2     spam  Free entry in 2 a wkly comp to win FA Cup fina...\n3      ham  U dun say so early hor... U c already then say...\n4      ham  Nah I don't think he goes to usf, he lives aro...\n...    ...                                                ...\n5567  spam  This is the 2nd time we have tried 2 contact u...\n5568   ham              Will Ì_ b going to esplanade fr home?\n5569   ham  Pity, * was in mood for that. So...any other s...\n5570   ham  The guy did some bitching but I acted like i'd...\n5571   ham                         Rofl. Its true to its name\n\n[5572 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>v1</th>\n      <th>v2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ham</td>\n      <td>Go until jurong point, crazy.. Available only ...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ham</td>\n      <td>Ok lar... Joking wif u oni...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>spam</td>\n      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ham</td>\n      <td>U dun say so early hor... U c already then say...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ham</td>\n      <td>Nah I don't think he goes to usf, he lives aro...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>5567</th>\n      <td>spam</td>\n      <td>This is the 2nd time we have tried 2 contact u...</td>\n    </tr>\n    <tr>\n      <th>5568</th>\n      <td>ham</td>\n      <td>Will Ì_ b going to esplanade fr home?</td>\n    </tr>\n    <tr>\n      <th>5569</th>\n      <td>ham</td>\n      <td>Pity, * was in mood for that. So...any other s...</td>\n    </tr>\n    <tr>\n      <th>5570</th>\n      <td>ham</td>\n      <td>The guy did some bitching but I acted like i'd...</td>\n    </tr>\n    <tr>\n      <th>5571</th>\n      <td>ham</td>\n      <td>Rofl. Its true to its name</td>\n    </tr>\n  </tbody>\n</table>\n<p>5572 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# this line of code renames the columns\ndf.rename(columns={\"v1\":\"Category\",\"v2\":\"Message\"},inplace = True)\ndf","metadata":{"execution":{"iopub.status.busy":"2024-06-17T16:32:23.377142Z","iopub.execute_input":"2024-06-17T16:32:23.377545Z","iopub.status.idle":"2024-06-17T16:32:23.392152Z","shell.execute_reply.started":"2024-06-17T16:32:23.377510Z","shell.execute_reply":"2024-06-17T16:32:23.390685Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"     Category                                            Message\n0         ham  Go until jurong point, crazy.. Available only ...\n1         ham                      Ok lar... Joking wif u oni...\n2        spam  Free entry in 2 a wkly comp to win FA Cup fina...\n3         ham  U dun say so early hor... U c already then say...\n4         ham  Nah I don't think he goes to usf, he lives aro...\n...       ...                                                ...\n5567     spam  This is the 2nd time we have tried 2 contact u...\n5568      ham              Will Ì_ b going to esplanade fr home?\n5569      ham  Pity, * was in mood for that. So...any other s...\n5570      ham  The guy did some bitching but I acted like i'd...\n5571      ham                         Rofl. Its true to its name\n\n[5572 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Category</th>\n      <th>Message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ham</td>\n      <td>Go until jurong point, crazy.. Available only ...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ham</td>\n      <td>Ok lar... Joking wif u oni...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>spam</td>\n      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ham</td>\n      <td>U dun say so early hor... U c already then say...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ham</td>\n      <td>Nah I don't think he goes to usf, he lives aro...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>5567</th>\n      <td>spam</td>\n      <td>This is the 2nd time we have tried 2 contact u...</td>\n    </tr>\n    <tr>\n      <th>5568</th>\n      <td>ham</td>\n      <td>Will Ì_ b going to esplanade fr home?</td>\n    </tr>\n    <tr>\n      <th>5569</th>\n      <td>ham</td>\n      <td>Pity, * was in mood for that. So...any other s...</td>\n    </tr>\n    <tr>\n      <th>5570</th>\n      <td>ham</td>\n      <td>The guy did some bitching but I acted like i'd...</td>\n    </tr>\n    <tr>\n      <th>5571</th>\n      <td>ham</td>\n      <td>Rofl. Its true to its name</td>\n    </tr>\n  </tbody>\n</table>\n<p>5572 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"#line of code importes the label Encoder\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndf[\"Category\"]=le.fit_transform(df[\"Category\"])\ndf","metadata":{"execution":{"iopub.status.busy":"2024-06-17T16:35:47.593672Z","iopub.execute_input":"2024-06-17T16:35:47.594078Z","iopub.status.idle":"2024-06-17T16:35:47.610308Z","shell.execute_reply.started":"2024-06-17T16:35:47.594046Z","shell.execute_reply":"2024-06-17T16:35:47.609140Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"      Category                                            Message\n0            0  Go until jurong point, crazy.. Available only ...\n1            0                      Ok lar... Joking wif u oni...\n2            1  Free entry in 2 a wkly comp to win FA Cup fina...\n3            0  U dun say so early hor... U c already then say...\n4            0  Nah I don't think he goes to usf, he lives aro...\n...        ...                                                ...\n5567         1  This is the 2nd time we have tried 2 contact u...\n5568         0              Will Ì_ b going to esplanade fr home?\n5569         0  Pity, * was in mood for that. So...any other s...\n5570         0  The guy did some bitching but I acted like i'd...\n5571         0                         Rofl. Its true to its name\n\n[5572 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Category</th>\n      <th>Message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>Go until jurong point, crazy.. Available only ...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>Ok lar... Joking wif u oni...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>U dun say so early hor... U c already then say...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>Nah I don't think he goes to usf, he lives aro...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>5567</th>\n      <td>1</td>\n      <td>This is the 2nd time we have tried 2 contact u...</td>\n    </tr>\n    <tr>\n      <th>5568</th>\n      <td>0</td>\n      <td>Will Ì_ b going to esplanade fr home?</td>\n    </tr>\n    <tr>\n      <th>5569</th>\n      <td>0</td>\n      <td>Pity, * was in mood for that. So...any other s...</td>\n    </tr>\n    <tr>\n      <th>5570</th>\n      <td>0</td>\n      <td>The guy did some bitching but I acted like i'd...</td>\n    </tr>\n    <tr>\n      <th>5571</th>\n      <td>0</td>\n      <td>Rofl. Its true to its name</td>\n    </tr>\n  </tbody>\n</table>\n<p>5572 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.shape\ndf.duplicated()\ndf.info()\n\n#checking for null values\ndf.isnull().sum()\n","metadata":{"execution":{"iopub.status.busy":"2024-06-17T18:34:00.562728Z","iopub.execute_input":"2024-06-17T18:34:00.563241Z","iopub.status.idle":"2024-06-17T18:34:00.588531Z","shell.execute_reply.started":"2024-06-17T18:34:00.563205Z","shell.execute_reply":"2024-06-17T18:34:00.587254Z"},"trusted":true},"execution_count":55,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 5169 entries, 0 to 5571\nData columns (total 2 columns):\n #   Column    Non-Null Count  Dtype \n---  ------    --------------  ----- \n 0   Category  5169 non-null   int64 \n 1   Message   5169 non-null   object\ndtypes: int64(1), object(1)\nmemory usage: 121.1+ KB\n","output_type":"stream"},{"execution_count":55,"output_type":"execute_result","data":{"text/plain":"Category    0\nMessage     0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"#checking for duplicate values\ndf.duplicated().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-17T18:35:12.324855Z","iopub.execute_input":"2024-06-17T18:35:12.325331Z","iopub.status.idle":"2024-06-17T18:35:12.337566Z","shell.execute_reply.started":"2024-06-17T18:35:12.325297Z","shell.execute_reply":"2024-06-17T18:35:12.335956Z"},"trusted":true},"execution_count":61,"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"code","source":"#dropping off duplicates\ndf=df.drop_duplicates(keep=\"first\")\n\n#Rechecking for the dupliacte values \ndf.duplicated().sum()\n","metadata":{"execution":{"iopub.status.busy":"2024-06-17T18:34:20.206989Z","iopub.execute_input":"2024-06-17T18:34:20.207430Z","iopub.status.idle":"2024-06-17T18:34:20.227485Z","shell.execute_reply.started":"2024-06-17T18:34:20.207398Z","shell.execute_reply":"2024-06-17T18:34:20.225829Z"},"trusted":true},"execution_count":58,"outputs":[{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"code","source":"#Rechecking for the datset shape\ndf.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-17T16:45:03.534469Z","iopub.execute_input":"2024-06-17T16:45:03.535435Z","iopub.status.idle":"2024-06-17T16:45:03.541916Z","shell.execute_reply.started":"2024-06-17T16:45:03.535399Z","shell.execute_reply":"2024-06-17T16:45:03.540717Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"(5169, 2)"},"metadata":{}}]},{"cell_type":"code","source":"#counts of Ham(0) & Spam(1)\ndf[\"Category\"].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-17T16:46:19.070013Z","iopub.execute_input":"2024-06-17T16:46:19.070392Z","iopub.status.idle":"2024-06-17T16:46:19.080811Z","shell.execute_reply.started":"2024-06-17T16:46:19.070364Z","shell.execute_reply":"2024-06-17T16:46:19.079519Z"},"trusted":true},"execution_count":31,"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"Category\n0    4516\n1     653\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"#Value counts of Ham and Spam  in the form of PIE CHART\nplt.pie(df[\"Category\"].value_counts(),autopct=\"%.3f\",labels=[\"Ham\",\"Spam\"])\nplt.show","metadata":{"execution":{"iopub.status.busy":"2024-06-17T16:49:02.587319Z","iopub.execute_input":"2024-06-17T16:49:02.587756Z","iopub.status.idle":"2024-06-17T16:49:02.730267Z","shell.execute_reply.started":"2024-06-17T16:49:02.587723Z","shell.execute_reply":"2024-06-17T16:49:02.728571Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"<function matplotlib.pyplot.show(close=None, block=None)>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"#Bar chart of class distribution\nclass_counts=df[\"Category\"].value_counts()\nplt.bar(class_counts.index,class_counts.values)\nplt.xlabel('class')\nplt.ylabel('number of messages')\nplt.title('CLASS DISTRIBUTION(Spam vs Ham)')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-17T17:05:00.040074Z","iopub.execute_input":"2024-06-17T17:05:00.040623Z","iopub.status.idle":"2024-06-17T17:05:00.287593Z","shell.execute_reply.started":"2024-06-17T17:05:00.040566Z","shell.execute_reply":"2024-06-17T17:05:00.286368Z"},"trusted":true},"execution_count":36,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"x=df[\"Message\"]\nx\n","metadata":{"execution":{"iopub.status.busy":"2024-06-17T17:21:59.837450Z","iopub.execute_input":"2024-06-17T17:21:59.838444Z","iopub.status.idle":"2024-06-17T17:21:59.851802Z","shell.execute_reply.started":"2024-06-17T17:21:59.838385Z","shell.execute_reply":"2024-06-17T17:21:59.850531Z"},"trusted":true},"execution_count":40,"outputs":[{"execution_count":40,"output_type":"execute_result","data":{"text/plain":"0       Go until jurong point, crazy.. Available only ...\n1                           Ok lar... Joking wif u oni...\n2       Free entry in 2 a wkly comp to win FA Cup fina...\n3       U dun say so early hor... U c already then say...\n4       Nah I don't think he goes to usf, he lives aro...\n                              ...                        \n5567    This is the 2nd time we have tried 2 contact u...\n5568                Will Ì_ b going to esplanade fr home?\n5569    Pity, * was in mood for that. So...any other s...\n5570    The guy did some bitching but I acted like i'd...\n5571                           Rofl. Its true to its name\nName: Message, Length: 5169, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"y=df[\"Category\"]\ny","metadata":{"execution":{"iopub.status.busy":"2024-06-17T17:22:02.135406Z","iopub.execute_input":"2024-06-17T17:22:02.135934Z","iopub.status.idle":"2024-06-17T17:22:02.146478Z","shell.execute_reply.started":"2024-06-17T17:22:02.135891Z","shell.execute_reply":"2024-06-17T17:22:02.145220Z"},"trusted":true},"execution_count":41,"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"0       0\n1       0\n2       1\n3       0\n4       0\n       ..\n5567    1\n5568    0\n5569    0\n5570    0\n5571    0\nName: Category, Length: 5169, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"#IMPORTING train test split library \nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-06-17T17:26:26.865071Z","iopub.execute_input":"2024-06-17T17:26:26.865644Z","iopub.status.idle":"2024-06-17T17:26:26.876591Z","shell.execute_reply.started":"2024-06-17T17:26:26.865598Z","shell.execute_reply":"2024-06-17T17:26:26.875246Z"},"trusted":true},"execution_count":48,"outputs":[]},{"cell_type":"markdown","source":"#  **CONCLUSION**\n\n* **I've been use SMS-spam-collection-dataset in my task.** \n*  **The code loads and preprocesses the SMS spam collection dataset, including renaming columns, label encoding the target variable, and handling duplicates.** \n* **It visualizes the class imbalance between spam and non-spam (ham) messages using plots.**\n* **The dataset is then split into training and testing sets for machine learning model development.**\n* **Further steps involve text preprocessing, evaluation,etc to enhance the spam detection and generalizing capabilities.**","metadata":{}}]}